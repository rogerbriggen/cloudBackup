name: CI

on: [push]

jobs:
  build:
    name: build
    runs-on: ${{ matrix.operating-system }}
    env:
        DOTNET_MULTILEVEL_LOOKUP: false      #use our version which we install ourself... see https://github.com/actions/setup-dotnet#environment-variables-to-use-with-dotnet
        DOTNET_NOLOGO: true                  #speed up things
        DOTNET_CLI_TELEMETRY_OPTOUT: true    #do not send telemetry to Microsoft
        DOTNET_VERSION: 7.0.x
        RELEASE_SUBDIR: net7.0
    strategy:
      matrix:
        operating-system: [windows-latest] #ubuntu-latest, macOS-latest
    #runs-on: [windows-latest]
      
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #avoid shallow clone so nerdbank gitversioning can do its work, see https://github.com/dotnet/Nerdbank.GitVersioning/blob/master/doc/cloudbuild.md


      - name: Setup dotnet env
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: ${{ env.DOTNET_VERSION }} # SDK Version to use.  3.1.x uses the latest version of the 3.1 channel


      - name: Build projects
        run: dotnet build --configuration Release cloudBackup.sln


      - name: Run unit-tests
        run: dotnet test --verbosity normal


      - name: Publish for Win-x64 as SingleFile
        run: dotnet publish --configuration Release --runtime win-x64 --self-contained --output cloudBackupUI/bin/Release/${{ env.RELEASE_SUBDIR }}-windows/win-x64/publish_singlefile/ /p:PublishSingleFile=true cloudBackupUI/cloudBackupUI.csproj


      - name: Upload artifact for Win-x64 as SingleFile
        uses: actions/upload-artifact@v3
        with:
            name: RemoteIncrediBuild_Release_Win-x64_SingleFile
            path: cloudBackupUI/bin/Release/${{ env.RELEASE_SUBDIR }}-windows/win-x64/publish_singlefile/
